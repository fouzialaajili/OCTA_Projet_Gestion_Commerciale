@model OCTA_Projet_Gestion_Commerciale.Web.ViewModels.ItemsFormViewModel

@{
    ViewBag.Title = "Nouveau Item";
}

@section pageButtons {


    <div class="btn-group">
        <button class="btn waves-effect waves-light" type="button" name="action" id="saveAll">Enregistrer</button>
        <button class="btn-flat with-border waves-effect waves-light" type="button" name="action" onclick="window.location.href='@Url.Action("Index")'">Fermer</button>
        <button class="btn-flat waves-effect waves-light dropdown-button" type="submit" name="action" data-activates='more-actions'><i class="material-icons">more_vert</i></button>
        <!-- Dropdown Structure -->
        <ul id='more-actions' class='dropdown-content'>
            <li>
                <a href="@Url.Action("Create", new { id = ""})">
                    <i class="material-icons">add</i>
                    <span>Nouveau dossier</span>
                </a>
            </li>
            <li>
                <a href="#" onclick="Recommencer()">
                    <i class="material-icons">check</i>
                    <span>Recommencer à zéro</span>
                </a>
            </li>
            <li>
                <a href="#" onclick="Supprimer()">
                    <i class="material-icons">delete_forever</i>
                    <span>Supprimer</span>
                </a>
            </li>
        </ul>
    </div>


}


@using (Html.BeginForm("Delete", "Items", FormMethod.Post, new { onsubmit = "return confirm('Voulez vous supprimer ce Item?');" }))

{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <button class="btn btn-danger btn-block" type="submit"  id="deleteButton" style="width:20%">Supprimer</button>

}
<br /><br />


@using (Html.BeginForm()) 
    {
      @Html.AntiForgeryToken()
      <input type="submit" id="createButton" value="Create" class="btn btn-default" style="width:20%"/>
      <br /><br />
        <input type="reset" id="recommencer" value="Recommencer" class="btn btn-default" style="width:20%" />
        <br /><br />
        <div class="form-horizontal">
            <h4>ItemsFormViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })






            <div class="form-group">
                @Html.LabelFor(model => model.IdModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("IdModel", null, string.Empty, htmlAttributes: new { @class = "form-control selectpicker" })
                    @Html.ValidationMessageFor(model => model.IdModel, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.IdModel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon"><span class="fa fa-pencil"></span></span>
                        @Html.EditorFor(model => model.IdModel, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.IdModel, "", new { @class = "text-danger" })
                </div>
            </div>*************************************************************************@



            <div class="form-group">
                @Html.LabelFor(model => model.Libelle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon"><span class="fa fa-pencil"></span></span>
                        @Html.EditorFor(model => model.Libelle, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Libelle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Valeur, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon"><span class="fa fa-pencil"></span></span>
                        @Html.EditorFor(model => model.Valeur, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Valeur, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Ordre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-addon"><span class="fa fa-pencil"></span></span>
                        @Html.EditorFor(model => model.Ordre, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Ordre, "", new { @class = "text-danger" })
                </div>
            </div>




            
        </div>
    }
    
   

<script>
    $("#saveAll").bind({
        click: function (e) {
            if ($('form').valid()) {
                $('#createButton').click();
            }

        }
    });
    function Recommencer() {
        $('#recommencer').click();

        function Supprimer() {
            $('#deleteButton').click();
        }

    }
</script>