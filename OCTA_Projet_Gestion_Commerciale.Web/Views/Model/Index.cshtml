@using Infragistics.Web.Mvc
@model IQueryable<OCTA_Projet_Gestion_Commerciale.Web.ViewModels.GEN_Model_ViewModel>

@{
    ViewBag.Title = "Liste des Models";
}
@*
    <link href="~/Content/Infragistics/css/themes/infragistics/infragistics.theme.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Infragistics/css/structure/infragistics.css" rel="stylesheet" type="text/css" />

    <script src="/Scripts/jquery-3.0.0.js" type="text/javascript"></script>
    <script src="/Scripts/jquery-3.0.0.min.js" type="text/javascript"></script>

    <script src="/Scripts/jquery-ui-1.12.0.js" type="text/javascript"></script>
    <script src="~/Scripts/Infragistics/js/infragistics.core.js" type="text/javascript"></script>

    <script src="~/Scripts/Infragistics/js/infragistics.lob.js" type="text/javascript"></script>
*@
@Styles.Render("~/infragistics/css")
@Scripts.Render("~/infragistics/js")
@*@section buttons {
    <h3 class="panel-title"><strong>@ViewBag.Title</strong></h3>
    <div class="col-md-18">

    </div>

    <ul class="panel-controls">
        <li><button class="btn btn-primary btn-block" onclick="window.location.href = '@Url.Action("Create")' ">Nouveau Model</button></li>
        <li>&nbsp;</li>
        <li><button class="btn btn-info btn-danger" onclick="window.location.href = '@Url.Content("~/Commun/Items/Create")' ">Créer un nouveau Item</button></li>
    </ul>
}*@
<div class="grilleIgnite">
    @(Html.Infragistics()
                                             .Grid<OCTA_Projet_Gestion_Commerciale.Web.ViewModels.GEN_Model_ViewModel>(Model)
                                             .ID("listGridModels")
                                             .AutoGenerateColumns(false)
                                             .AutoGenerateLayouts(false)
                                             .RenderCheckboxes(true)
                                             .AutoCommit(true)
                                             .Columns(column =>
                                             {
                                                 column.For(x => x.Id).Hidden(true);
                                                 column.For(x => x.Model).Template("<a href='" + @Url.Action("Create", "Model") + "/${Id}\' \">${Model}</a>");
                                                 column.For(x => x.IdDossier).FormatterFunction("lookupSociete");

                                             })
                                             .Features(feature =>
                                             {
                                                 feature.Updating().EnableAddRow(false).EnableDeleteRow(true).EditMode(GridEditMode.None);

                                                 feature.Filtering().Mode(FilterMode.Simple).Type(OpType.Local);
                                                 feature.Sorting();
                                                 feature.Resizing();
                                                 feature.ColumnMoving();
                                                 feature.Paging().PageSize(10);

                                             })
                                             .PrimaryKey("Id")
                                             .DataBind()
                                             .Width("100%")
                                             .Render()
    )

    <script type="text/javascript">
        var listSocietes=@Html.Raw(Json.Encode(ViewBag.IdSociete)),
            gridModels=$('#listGridModels');
        var imglinkSrc='@Url.Content("~/Content/Images/linkIcon.png")';

        function lookupSociete(id) {


            for(var i=0;i<listSocietes.length;i++)
            {
                if(listSocietes[i].ID===id)
                {
                    return listSocietes[i].VALUE;
                }
            }

            return '';
        }

        gridModels.on("iggridrendered", function (e, ui) {
            replaceComboFilterEditor('listGridModels', 'IdSociete', listSocietes);
        });

    </script>
</div>
@*@model IEnumerable<OCTA.Models.GEN_Model>

    @{
        ViewBag.Title = "Liste des Models";
    }
    @section buttons {
        <h3 class="panel-title"><strong>@ViewBag.Title</strong></h3>
        <div class="col-md-18">

        </div>

        <ul class="panel-controls">
            <li><button class="btn btn-primary btn-block" onclick="window.location.href = '@Url.Action("Create")' ">Nouveau Model</button></li>
            <li>&nbsp;</li>
            <li><button class="btn btn-info btn-block" onclick="window.location.href = '@Url.Content("~/Commun/Items/Create")' ">Créer un nouveau Item</button></li>






        </ul>
    }

    <table class="table datatable_simple ">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.Model)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GEN_Societes.RaisonSociale)
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>

                        @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "fa fa-pencil " })
                        @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "fa fa-times " })
                        @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "fa fa-align-justify " })


                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Model)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GEN_Societes.RaisonSociale)
                    </td>



                </tr>

            }
        </tbody>
    </table>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@



