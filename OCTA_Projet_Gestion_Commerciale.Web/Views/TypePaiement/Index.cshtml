@using Infragistics.Web.Mvc
@model IQueryable<OCTA_Projet_Gestion_Commerciale.Web.ViewModels.GEN_TypePaiement_ViewModel>

@{
    ViewBag.Title = "Liste des échéancements";
}


@*@(Html.Infragistics()
    .Loader()
            .ScriptPath(Url.Content("~/Scripts/Infragistics/js/"))
            .CssPath(Url.Content("~/Content/Infragistics/css"))
            .AutoDetectLocale(true)
            .Resources("igGrid.*,igCombo")
    .Render())
*@


<link href="~/Content/Infragistics/css/themes/infragistics/infragistics.theme.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Infragistics/css/structure/infragistics.css" rel="stylesheet" type="text/css" />
<script src="/Scripts/jquery-3.0.0.js" type="text/javascript"></script>
<script src="/Scripts/jquery-3.0.0.min.js" type="text/javascript"></script>

<script src="/Scripts/jquery-ui-1.12.0.js" type="text/javascript"></script>
<script src="~/Scripts/Infragistics/js/infragistics.core.js" type="text/javascript"></script>

<script src="~/Scripts/Infragistics/js/infragistics.lob.js" type="text/javascript"></script>
@section buttons {
   
    <div class="col-md-18">

    </div>

    <ul class="panel-controls">
        <li><button class="btn btn-primary btn-block" type="button" onclick="window.location.href='@Url.Action("Create")'">Nouveau</button></li>
        <li>&nbsp;</li>
        <li><button class="btn btn-primary btn-success" type="button" onclick="window.location.href='@Url.Action("Index")'">Exporter</button></li>
        <li>&nbsp;</li>
        <li><button class="btn btn-primary btn-info" type="button" onclick="window.location.href='@Url.Action("Index")'">Importer</button></li>
        <li>&nbsp;</li>
    </ul>
}
<div class="grilleIgnite">
  @(Html.Infragistics()
                             .Grid<OCTA_Projet_Gestion_Commerciale.Web.ViewModels.GEN_TypePaiement_ViewModel>(Model)
                             .ID("listGridTypePaiements")
                             .AutoGenerateColumns(false)
                             .AutoGenerateLayouts(false)
                             .RenderCheckboxes(true)
                             .AutoCommit(true)
                             .Columns(column =>
                             {
                                 column.For(x => x.TypePaiementId).Hidden(true);
                                 column.For(x => x.Libelle).Width("90%").Template("<a href='" + @Url.Action("Create", "TypePaiement") + "/${Id}\' \">${Libelle}</a>");//.FormatterFunction("lookupNumPiece");
                     column.For(x => x.Actif).Width("10%").FormatterFunction("lookupActif");

                             })
                             .Features(feature =>
                             {
                                 feature.Updating().EnableAddRow(false).EnableDeleteRow(false).EditMode(GridEditMode.None);

                                 feature.Filtering().Mode(FilterMode.Simple).Type(OpType.Local);
                                 feature.Sorting();
                                 feature.Resizing();
                                 feature.ColumnMoving();
                                 feature.Paging().PageSize(10);

                             })
                             .PrimaryKey("Id")
                             .DataBind()
                             .Width("100%")
                             .Render()
    )

    <script type="text/javascript">
        var gridTypePaiements=$('#listGridTypePaiements');
        var imglinkSrc='@Url.Content("~/Content/Images/linkIcon.png")';
        //function lookupActif(id, record) {

        //    if (record.Actif) {

        //        return '<span class="btn-sm btn-success statutRB">Oui</span>';
        //    }
        //    else {
        //        return '<span class="btn-sm btn-danger statutRB">Non</span>';
        //    }
        //    return '';
        //}
        function lookupActif(id, record) {

            if (record.Actif) {

                return '<div class="checkboxStyle"><input type="checkbox" value="1" id="checkboxInput_' + record.Id + '" name="" checked/><label ></label></div>';

            }
            else {
                return '<div class="checkboxStyle"><input type="checkbox" value="0" id="checkboxInput_' + record.Id + '" name="" checked/><label ></label></div>';

            }
            return '';
        }




        gridTypePaiements.on("iggridrendered", function (e, ui) {
        });

        $(document).ready(function () {
            var messageErreur = "@(new MvcHtmlString((string)ViewBag.Message))";
            if (messageErreur != "") {
                alert(messageErreur);

            }
        });

    </script>
</div>













@*@model IEnumerable<OCTA.Models.GEN_TypePaiement>
    @{
        ViewBag.Title = "Liste des type de paiement";
    }

    @section buttons {
        <h3 class="panel-title"><strong>@ViewBag.Title</strong></h3>
        <div class="col-md-18">

        </div>

        <ul class="panel-controls">
            <li><button class="btn btn-primary btn-block" type="button" onclick="window.location.href='@Url.Action("Create")'">Nouveau</button></li>
            <li>&nbsp;</li>
            <li><button class="btn btn-primary btn-success" type="button" onclick="window.location.href='@Url.Action("Index")'">Exporter</button></li>
            <li>&nbsp;</li>
            <li><button class="btn btn-primary btn-info" type="button" onclick="window.location.href='@Url.Action("Index")'">Importer</button></li>
            <li>&nbsp;</li>
        </ul>
    }

    <table class="table datatable_simple ">
        <thead>
            <tr>
                <th>Actions</th>
                <th>
                    @Html.DisplayNameFor(model => model.Libelle)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Actif)
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>

                        @Html.ActionLink(" ", "Create", new { id = item.Id }, new { @class = "fa fa-pencil " })
                        @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "fa fa-times " })
                        @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "fa fa-align-justify " })


                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Libelle)
                    </td>

                    <td>
                        @if (@item.Actif == true)
                        {
                            <span class="label label-success">Oui</span>

                        }
                        else
                        {
                            <span class="label label-danger">Non</span>
                        }
                    </td>




                </tr>

            }
        </tbody>
    </table>







    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@




