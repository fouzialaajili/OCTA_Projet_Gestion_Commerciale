
@using Infragistics.Web.Mvc
@model IQueryable<OCTA_Projet_Gestion_Commerciale.Web.ViewModels.ItemsViewModel>
@{
    ViewBag.Title = "Liste des items";
  //  Layout = "";
}


<link href="~/Content/Infragistics/css/themes/infragistics/infragistics.theme.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Infragistics/css/structure/infragistics.css" rel="stylesheet" type="text/css" />
<script src="/Scripts/jquery-3.0.0.js" type="text/javascript"></script>
<script src="/Scripts/jquery-3.0.0.min.js" type="text/javascript"></script>

<script src="/Scripts/jquery-ui-1.12.0.js" type="text/javascript"></script>
<script src="~/Scripts/Infragistics/js/infragistics.core.js" type="text/javascript"></script>

<script src="~/Scripts/Infragistics/js/infragistics.lob.js" type="text/javascript"></script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

@*<h3 class="panel-title"><strong>@ViewBag.Title</strong></h3>
<br /><br /><br />
<div class="col-md-2 col-md-offset-10">
    <button class="btn btn-primary btn-block" type="button" onclick="window.location.href='@Url.Action("Create")'">Nouvelle Items</button>
</div>
<br /><br /><br />*@




<div class="grilleIgnite">
    @(Html.Infragistics()
                                                                     .Grid<OCTA_Projet_Gestion_Commerciale.Web.ViewModels.ItemsViewModel>(Model)
                                                                     .ID("listGridItems")
                                                                     .AutoGenerateColumns(false)
                                                                     .AutoGenerateLayouts(false)
                                                                     .RenderCheckboxes(true)
                                                                     .AutoCommit(true)
                                                                     .Columns(column =>
                                                                     {




                                                                         column.For(x => x.Id).Hidden(true);
                                                                         column.For(x => x.IdModel).FormatterFunction("lookupModel");
                                                                         column.For(x => x.Libelle).HeaderText("Libelle").Template("<a href='" + @Url.Action("Create", "Items") + "/${Id}\' \">${Libelle}</a>");
                                                                         column.For(x => x.Valeur).HeaderText("Valeur");//.FormatterFunction("lookupNumPiece");
                                                                         column.For(x => x.Ordre).HeaderText("Ordre");
                                                                         //column.Unbound("UnBound").Template("<a href='/Items/Edit/${Id}'>Edit</a>").Width("20%").HeaderText("Edit");





                                                                     })
                                                                     .Features(feature =>
                                                                     {
                                                                         feature.Updating().EnableAddRow(false).EnableDeleteRow(false).EditMode(GridEditMode.None);

                                                                         feature.Filtering().Mode(FilterMode.Simple).Type(OpType.Local);
                                                                         feature.Sorting();
                                                                         feature.Resizing();
                                                                         feature.ColumnMoving();
                                                                         feature.Paging().PageSize(10);

                                                                     })
                                                                     .PrimaryKey("Id")
                                                                     .DataBind()
                                                                     .Width("100%")
                                                                     .Render()
    )





    @*<script type="text/javascript">
        var gridItems = $('#listGridItems');



        function lookupActif(id, record) {

            if (record.Actif) {

                return '<div class="checkboxStyle"><input type="checkbox" value="1" id="checkboxInput_' + record.Id + '" name="" checked/><label ></label></div>';

            }
            else {
                return '<div class="checkboxStyle"><input type="checkbox" value="0" id="checkboxInput_' + record.Id + '" name="" checked/><label ></label></div>';

            }
            return '';
        }

        gridItems.on("iggridrendered", function (e, ui) {
        });

        $(document).ready(function () {
            var messageErreur = "@(new MvcHtmlString((string)ViewBag.Message))";
            if (messageErreur != "") {
                alert(messageErreur);

            }
        });


    </script>*@



    <script type="text/javascript">
        var listModels=@Html.Raw(Json.Encode(ViewBag.idModel)),
            gridItems=$('#listGridItems');
        var imglinkSrc='@Url.Content("~/Content/Images/linkIcon.png")';

        function lookupModel(id) {


            for(var i=0;i<listModels.length;i++)
            {
                if(listModels[i].ID===id)
                {
                    return listModels[i].VALUE+"&nbsp;<a href='@Url.Action("Edit","Models")\\"+listModels[i].ID+"' target='_blank'><img title='Modifier' alt='Modifier' src='" + imglinkSrc + "' class='linkIcon'/></a>";
                }
            }

            return '';
        }

        gridItems.on("iggridrendered", function (e, ui) {
            replaceComboFilterEditor('listGridItems', 'IdModel', listModels);
        });

    </script>












</div>

